image: registry.paas.ptcloud.t.home/paas/docker:latest


variables:
  GROUP_NAME: paas
  APP_NAME: go-fluentd-forward

  DOCKER_REGISTRY_URL: registry.paas.ptcloud.t.home/paas
  DOCKER_IMAGE_NAME: $DOCKER_REGISTRY_URL/$APP_NAME
  DOCKER_TAG: $CI_PIPELINE_IID-$CI_COMMIT_SHORT_SHA

  SPRING_PROFILES_ACTIVE: gitlab-ci
  DOCKER_DRIVER: overlay
  WORK_HOME: "."
  MARATHON_CONFIG: ./marathon.json

  CHART_HOME: ./Chart/$APP_NAME
  HARBOR_URL: registry.paas.ptcloud.t.home
  HARBOR_IMAGE_NAME: $HARBOR_URL/$GROUP_NAME/$APP_NAME
  DEPLOY_HOST: logsrv-sit.pateo.com.cn
  HEALTH_CHECK_URL: https://logsrv-sit.pateo.com.cn/metrics
  KUBECONFIG: /config


cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - /go/pkg
    - $HOME/.cache/go-build


stages:
  - build
  # - test
  - deploy


# app:build:
#   stage: build
#   tags:
#     - public
#   image: registry.paas.ptcloud.t.home/paas/docker:latest
#   script:
#     - rm -rf ./.git
#     - docker build --build-arg http_proxy=http://172.16.4.26:17777 --build-arg https_proxy=http://172.16.4.26:17777 . -t $DOCKER_IMAGE_NAME:$DOCKER_TAG -f ./.docker/forward.Dockerfile
#     - docker push $DOCKER_IMAGE_NAME:$DOCKER_TAG
#   only:
#     - master
#   retry: 1


# # test:run:
# #   stage: test
# #   tags:
# #     - public
# #   image: registry.paas.ptcloud.t.home/paas/docker:latest
# #   script:
# #     - docker pull registry.paas.ptcloud.t.home/paas/gobase:1.13.4-alpine3.10  # pull latest image
# #     - docker build . -f ./.docker/test.Dockerfile -t go-fluentd-test:$DOCKER_TAG
# #   retry: 1


# app:marathon-deploy:
#   stage: deploy
#   tags:
#     - public
#   image: registry.paas.ptcloud.t.home/paas/appropriate/curl:latest
#   script:
#     - "sed -i \"s#DOCKER_IMAGE_NAME#$DOCKER_IMAGE_NAME:$DOCKER_TAG#g\" $MARATHON_CONFIG"
#     - "cat $MARATHON_CONFIG"
#     - "curl -X PUT -H 'Content-Type: application/json' \"http://172.16.5.11/marathon/v2/apps/paas/$APP_NAME?force=true\" -d @$MARATHON_CONFIG"
#   only:
#     - master
#   environment:
#     name: sit
#     url: http://logsrv-sit.pateo.com.cn/monitor
#   retry: 1


# ==============================================
# k8s
# ==============================================

harbor-build:
  stage: build
  tags:
    - default
  image: registry.paas.ptcloud.t.home/common/docker:latest
  script:
    - rm -rf ./.git
    - docker build . -t $HARBOR_IMAGE_NAME:$DOCKER_TAG -f ./.docker/forward.Dockerfile --build-arg http_proxy=http://172.16.4.26:17777 --build-arg https_proxy=http://172.16.4.26:17777
    - docker push $HARBOR_IMAGE_NAME
  # only:
  #   - develop



kubernetes-deploy:
  stage: deploy
  tags:
    - default
  image: registry.paas.ptcloud.t.home/common/kube-helm:12-7354812d
  script:
    - "sed -i \"s#VAR_DOCKER_IMAGE_NAME#$HARBOR_IMAGE_NAME:$DOCKER_TAG#g\" ${CHART_HOME}/values.yaml"
    - "sed -i \"s#VAR_APP_NAME#/$GROUP_NAME/$APP_NAME#g\" ${CHART_HOME}/values.yaml"
    - "sed -i \"s#VAR_HOST#$DEPLOY_HOST#g\" ${CHART_HOME}/values.yaml"
    - "sed -i \"s#VAR_ENV#$VAR_ENV#g\" ${CHART_HOME}/values.yaml"

    - export GROUP_NAME=`echo ${GROUP_NAME} | tr "[A-Z]" "[a-z]"`
    - export DOCKER_IMAGE_NAME=$HARBOR_IMAGE_NAME:$DOCKER_TAG
    - export CI_PROJECT_NAME=${APP_NAME}
    - export DNS_NAME=${DEPLOY_HOST}

    - /renderer.sh ${CHART_HOME}/Chart.yaml ${CHART_HOME}/values.yaml
    - /helm lint ${CHART_HOME}/
    - if [ "$?" -ne 0 ]; then exit $?; fi

    - /helm push ${CHART_HOME}/ ${HELM_REPO_URL}/chartrepo/${GROUP_NAME}
        --ca-file /sit-kube-ca.pem
        --username ${HELM_REPO_USERNAME}
        --password ${HELM_REPO_PW}
    - /kubectl config set-context kube-admin --namespace ${GROUP_NAME}
    - export release_exists=`/helm list -n ${GROUP_NAME} | grep -w "${APP_NAME}" | grep -w "${GROUP_NAME}" | grep -w "failed" | awk '{print $1}'`
    - echo $release_exists
    - if [ "${release_exists}" != "" ];then echo ${release_exists} | xargs /helm uninstall -n ${GROUP_NAME};fi
    # - sleep 19999999s
    - /helm ls -n paas
    - /helm upgrade --install ${APP_NAME} ${APP_NAME}
        --repo ${HELM_REPO_URL}/chartrepo/${GROUP_NAME}
        --version ${DOCKER_TAG}
        --username ${HELM_REPO_USERNAME}
        --password ${HELM_REPO_PW}
        --reset-values
        --recreate-pods
        -n ${GROUP_NAME}
  # only:
  #   - develop
  environment:
    name: sit
    url: ${HEALTH_CHECK_URL}
