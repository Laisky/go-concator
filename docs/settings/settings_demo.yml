settings:
  acceptor:
    async_out_chan_size: 100000
    sync_out_chan_size: 10000
    max_rotate_id: 100000000  # do not change
    recvs:
      fluentd:
        tag_key: tag
        addr: 127.0.0.1:18082
      rsyslog:
        tag_key: tag
        addr: 127.0.0.1:18083
      kafka_recvs:
        interval_num: 5000
        interval_sec: 3
        tenants:
          spark:
            name: spark
            nconsumer: 1
            msg_key: log
            tag_key: tag
            is_json_format: false
            meta:
              container_id: "go-fluentd"
            groups:
              sit: paas_spark_log_sit_v2
              uat: paas_spark_log_uat_v2
              perf: paas_spark_log_perf_v2
              prod: paas_spark_log_prod_v2
            topics:
              sit: logaiSit
              uat: logaiUat
              perf: logaiPerf
              prod: logaiPro
            tags:
              sit: spark.sit
              uat: spark.uat
              perf: spark.perf
              prod: spark.prod
            brokers:
              sit:
                - x.x.x.x:9092
              uat:
                - x.x.x.x:9092
              perf:
                - x.x.x.x:9092
              prod:
                - x.x.x.x:9092
          kafkabuf:
            name: kafkabuf
            nconsumer: 1
            msg_key: log
            is_json_format: true
            json_tag_key: tag
            tag_key: tag
            rewrite_tag: kafkabuf
            groups:
              sit: paas_log_platform_sit
              perf: paas_log_platform_perf
              uat: paas_log_platform_uat
              prod: paas_log_platform_prod
            topics:
              sit: logbuf_sit
              uat: logbuf_uat
              perf: logbuf_perf
              prod: logbuf_prod
            brokers:
              sit:
                - x.x.x.x:9092
              uat:
                - x.x.x.x:9092
              perf:
                - x.x.x.x:9092
              prod:
                - x.x.x.x:9092
  producer:
    discard_chan_size: 50000
    sender_inchan_size: 50000
    tenants:
      fluentd:  # also used by `acceptorFilters.default_f`
        tags: &all-tags
          - test
          - app.spring
          - gateway
          - connector
          - cp
          - ptdeployer
          - tsp
          - ai
          - base
          - geely
          - bot
          - spark
          - emqtt
          - kafkabuf
        forks: 3
        addr: 127.0.0.1:24225
        msg_batch_size: 1000
        max_wait_sec: 5
        retry_chan_len: 10000
        is_discard_when_blocked: true
      es_general:
        tags:
          - es-general
        forks: 10
        addr: http://x.x.x.x/_bulk
        msg_batch_size: 1000
        max_wait_sec: 3
        tag_key: tag
        retry_chan_len: 10000
        indices:
          app.spring.{env}: "{env}-spring-logs-write"
          gateway.{env}: "{env}-gateway-logs-write"
          connector.{env}: "{env}-connector-logs-write"
          cp.{env}: "{env}-cp-logs-write"
          ptdeployer.{env}: "{env}-spring-logs-write"
          tsp.{env}: "{env}-spring-logs-write"
          ai.{env}: "{env}-spring-logs-write"
          base.{env}: "{env}-spring-logs-write"
          bot.{env}: "{env}-spring-logs-write"
          spark.{env}: "{env}-spark-logs-write"
          emqtt.{env}: "{env}-emqtt-logs-write"
        is_discard_when_blocked: false
      es_geely:
        tags:
          - es-geely
        forks: 10
        addr: http://x.x.x.x/_bulk
        msg_batch_size: 1000
        max_wait_sec: 3
        tag_key: tag
        retry_chan_len: 10000
        indices:
          geely.{env}: "{env}-geely-logs-write"
        is_discard_when_blocked: false
      kafkabuf:
        tag_key: tag
        brokers:
          - x.x.x.x:9092
        topic:
          sit: logbuf_sit
          perf: logbuf_perf
          uat: logbuf_uat
          prod: logbuf_prod
        tags:  # all-tags exclude `kafkabuf`
          - test
          - app.spring
          - gateway
          - connector
          - cp
          - ptdeployer
          - tsp
          - ai
          - base
          - geely
          - bot
          - spark
          - emqtt
        forks: 3
        msg_batch_size: 10000
        max_wait_sec: 5
        retry_chan_len: 100000
        is_discard_when_blocked: false
      kafka_cp:
        tag_key: tag
        brokers:
          sit: &default-kafka-brokers
            - x.x.x.x:9092
          perf: *default-kafka-brokers
          uat: *default-kafka-brokers
          prod:
            - x.x.x.x:9092
        topic: docker_message
        tags:
          - cp
        forks: 3
        msg_batch_size: 10000
        max_wait_sec: 5
        retry_chan_len: 100000
        is_discard_when_blocked: false
      fluentd_backup_geely:
        tags:
          - geely
        forks: 3
        addr: fluentd-sit.ptcloud.t.home:24235
        msg_batch_size: 10000
        max_wait_sec: 5
        retry_chan_len: 50000
        is_discard_when_blocked: true
      fluentd_backup_emqtt:
        tags:
          - emqtt
        forks: 3
        addr: fluentd-sit.ptcloud.t.home:24236
        msg_batch_size: 10000
        max_wait_sec: 5
        retry_chan_len: 50000
        is_discard_when_blocked: true
  journal:
    buf_dir_path: /Users/laisky/Downloads/buf
    buf_file_bytes: 209315200  # 200 MB
    journal_out_chan_len: 100000
    commit_id_chan_len: 500000
  acceptor_filters:
    out_buf_len: 150000
    reenter_chan_len: 5000
    fork: 4
    tenants:
      spark:
        msg_key: log
        identifier: container_id
        ignore_regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2},\d{3} +\[
      spring:
        msg_key: log
        tag_key: tag
        rules:
          - new_tag: cp.{env}
            regexp: ms:cp
          - new_tag: bot.{env}
            regexp: ms_\w+\ {0,}\|
          - new_tag: app.spring.{env}
            regexp: .*
  post_filters:
    reenter_chan_len: 5000
    out_chan_size: 10000
    fork: 4
    tenants:
      default:
        msg_key: log
        max_len: 307200
      es_dispatcher:
        tag: kafkabuf
        tag_key: tag
        rewrite_tag_map:
          # es-general
          app.spring.{env}: es-general
          gateway.{env}: es-general
          connector.{env}: es-general
          cp.{env}: es-general
          ptdeployer.{env}: es-general
          tsp.{env}: es-general
          ai.{env}: es-general
          base.{env}: es-general
          bot.{env}: es-general
          spark.{env}: es-general
          emqtt.{env}: es-general
          # es-geely
          geely.{env}: es-geely
  dispatcher:
    out_chan_size: 10000
  tag_filters:
    internal_chan_size: 10000
    tenants:
      connector:
        tags:
          - connector
          - gateway
        msg_key: log
        # 2018-04-02 02:02:10.928 | sh-datamining | INFO | http-nio-8080-exec-80 | com.pateo.qingcloud.gateway.core.zuul.filters.post.LogFilter | 74 | {"key": "value"}: xxx
        # 2018-04-02 02:02:10.928 | sh-datamining | INFO | http-nio-8080-exec-80 | com.pateo.qingcloud.gateway.core.zuul.filters.post.LogFilter | 74 | xxx
        # 2018-03-12 02:02:10.928 | gateway | INFO | http-nio-8080-exec-80 | com.pateo.qingcloud.gateway.core.zuul.filters.post.LogFilter | 74: {"key": "value"}:xxx
        pattern: (?ms)^(?P<time>.{23}) {0,}\| {0,}(?P<app>[^\|]+) {0,}\| {0,}(?P<level>[^\|]+) {0,}\| {0,}(?P<thread>[^\|]+) {0,}\| {0,}(?P<class>[^\|]+) {0,}\| {0,}(?P<line>\d+) {0,}([\|:] {0,}(?P<args>\{.*\}))?([\|:] {0,}(?P<message>.*))?
        is_remove_orig_log: true
        parse_json_key: args
        must_include: app
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone: "+0800"
      geely:
        tags:
          - geely
        msg_key: log
        # 2018-02-05 10:33:13.408 | geely:nlcc | INFO | http-bio-8081-exec-3 | com.tservice.cc.web.interceptor.MyLoggingOutInterceptor.handleMessage:57 - Outbound Message:{ID:1, Address:http://10.133.200.77:8082/gisnavi/tservice/gisnavi/poi/poicategory, Http-Method:GET, Content-Type:application/json, Headers:{Content-Type=[application/json], Accept=[application/json]}}
        pattern: (?ms)^(?P<time>.{23}) {0,}\| {0,}(?P<project>[^\|]+) {0,}\| {0,}(?P<level>[^\|]+) {0,}\| {0,}(?P<thread>[^\|]+) {0,}\| {0,}(?P<class>[^\:]+)\:(?P<line>\d+) {0,}- {0,}(?P<message>.+)
        is_remove_orig_log: true
        must_include: project
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone: "+0800"
      emqtt:
        tags:
          - emqtt
        add:
          emqtt:
            datasource: emqtt
      spark:
        tags:
          - spark
        msg_key: log
        # 2018/03/06 15:19:23.619 INFO 6356e435e4894a22a41c80e6ade35526 com.pateo.qingcloud.ai.sparkstreaming.db.AiDbService: Enter getFuseDataType  function!
        pattern: "(?ms)^(?P<time>.{23}) {0,}(?P<level>[^ ]+) +(?P<uuid>[^ ]+) +(?P<app_info>[^:]+) {0,}: {0,}(?P<message>.*)"
        is_remove_orig_log: true
        must_include: app_info
        # ⬇⬇ time
        time_key: time
        time_format: "2006/01/02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone:
          sit: "+0800"
          perf: "+0000"
          uat: "+0000"
          prod: "+0800"
      ptdeployer:
        tags:
          - ptdeployer
        msg_key: log
        # [2018-11-12 03:41:39,735 - ptdeployer - views.py - 1429 - INFO - app_log] - zihengni登录成功
        pattern: (?ms)^\[(?P<time>.{23}) {0,}- {0,}(?P<app>[^\-]+) {0,}- {0,}(?P<class>[^\-]+) {0,}- {0,}(?P<line>\d+) {0,}- {0,}(?P<level>[^\-]+) {0,}- {0,}(?P<thread>[^\|]+)\] {0,}- {0,}(?P<message>.*)
        is_remove_orig_log: true
        must_include: app
        add:  # optional
          ptdeployer:
            datasource: ptdeployer
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05,000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone: "+0000"
      cp:
        tags:
          - cp
        msg_key: log
        # 2018-02-01 16:15:43.518 - ms:cp|type:platform|uuid:4f99962d-c272-43bb-85d9-20ab030180b7|dateTime:2018-02-01 16:15:43.518|customerSid:27|customerCode:DT00000000|customerName:默认
        pattern: (?ms)^(?P<time>.{23}) - (?P<message>ms:cp.*)
        is_remove_orig_log: true
        must_include: message
        add:  # optional
          cp:
            datasource: cp
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone: "+0800"
      spring:
        tags:
          - app.spring
          - ai
          - tsp
          - base
          - bot
        msg_key: log
        # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
        pattern: (?ms)^(?P<time>.{23}) {0,}\| {0,}(?P<app>[^\|]+) {0,}\| {0,}(?P<level>[^\|]+) {0,}\| {0,}(?P<thread>[^\|]+) {0,}\| {0,}(?P<class>[^ ]+) {0,}\| {0,}(?P<line>\d+) {0,}([\|:] {0,}(?P<args>\{.*\}))?([\|:] {0,}(?P<message>.*))?
        is_remove_orig_log: true
        must_include: app
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone: "+0800"
        # ⬇⬇ fields
        add:  # optional
          ai:
            datasource: ai
          tsp:
            datasource: tsp
          base:
            datasource: base
          bot:
            datasource: bot
          app.spring:
            datasource: spring
      concator:
        config:
          max_length: 100000
        tenants:
          test:
            msg_key: log
            identifier: container_id
            regex: ^\d{4}-\d{2}-\d{2}

          spark:
            msg_key: log
            identifier: container_id
            regex: ^\d{4}\/\d{2}\/\d{2} \d{2}:\d{2}:\d{2}.\d{3} \w+
          cp:
            msg_key: log
            identifier: container_id
            # 2018-02-01 16:15:43.518 - ms:cp|type:platform|uuid:4f99962d-c272-43bb-85d9-20ab030180b7|dateTime:2018-02-01 16:15:43.518|customerSid:27|customerCode:DT00000000|customerName:默认
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} - ms:cp\|
          ramjet:
            msg_key: log
            identifier: container_id
            # [2018-08-03T05:42:42.714151Z - DEBUG - /go/src/github.com/Laisky/go-ramjet/tasks/logrotate/backup/main.go:129] IsFileReadyToUpload for 2018050700.log.gz
            regex: ^\[\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z - \w+ -
          app.spring:
            msg_key: log
            identifier: container_id
            # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          tsp:
            msg_key: log
            identifier: container_id
            # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          ai:
            msg_key: log
            identifier: container_id
            # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          base:
            msg_key: log
            identifier: container_id
            # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          bot:
            msg_key: log
            identifier: container_id
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          gateway:
            msg_key: log
            identifier: container_id
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          connector:
            msg_key: log
            identifier: container_id
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          geely:
            msg_key: log
            # 2018-02-05 10:33:13.408 | geely:nlcc | INFO | http-bio-8081-exec-3 | com.tservice.cc.web.interceptor.MyLoggingOutInterceptor.handleMessage:57 - Outbound Message:{ID:1, Address:http://10.133.200.77:8082/gisnavi/tservice/gisnavi/poi/poicategory, Http-Method:GET, Content-Type:application/json, Headers:{Content-Type=[application/json], Accept=[application/json]}}
            # 2018-04-15 10:59:31.096 | geely:vca | INFO  | I/O dispatcher 2 | MONITORLOG.writeMonitorLog:26 - 2018-04-15 10:59:31.096|VCA|XXX19YYYY10040463|vca00157f9c04ff887f2b3488ddc4f2b|VCA_TRIGGER_OUT'
            identifier: container_id
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} +\|
          ptdeployer:
            msg_key: log
            identifier: container_id
            regex: ^\[\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} +-
