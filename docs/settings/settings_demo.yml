settings:
  listen_addr: 127.0.0.1:18082
  producer:
    discard_chan_size: 50000
    sender_inchan_size: 8000
    tenants:
      fluentd:
        tags: &all-tags
          - test
          - app.spring
          - gateway
          - connector
          - cp
          - ptdeployer
          - tsp
          - ai
          - base
          - geely
          - bot
          - spark
        forks: 3
        addr: 127.0.0.1:24225
        msg_batch_size: 1000
        max_wait_sec: 5
        retry_chan_len: 10000
      kafka:
        brokers:
          - xxx:9092
        topic:
          sit: logbuf_sit
          perf: logbuf_perf
          uat: logbuf_uat
          prod: logbuf_prod
        tags: *all-tags
        forks: 3
        msg_batch_size: 10000
        max_wait_sec: 5
        retry_chan_len: 10000
      kafka_cp:
        brokers:
          sit: &default-kafka-brokers
            - xxx
          perf: *default-kafka-brokers
          uat: *default-kafka-brokers
          prod:
            - xxx
        topic: docker_message
        tags:
          - cp
        forks: 3
        msg_batch_size: 10000
        max_wait_sec: 5
        retry_chan_len: 10000
      fluentd_backup:
        tags:
          - geely
        forks: 3
        addr: fluentd-sit.ptcloud.t.home:24235
        msg_batch_size: 1000
        max_wait_sec: 5
        retry_chan_len: 10000
  journal:
    buf_dir_path: /Users/laisky/Downloads/buf
    buf_file_bytes: 209315200  # 200 MB
    journal_out_chan_len: 100000
    commit_id_chan_len: 500000
  acceptor:
    out_chan_size: 100000
    max_rotate_id: 100000000  # do not change
  acceptor_filters:
    out_buf_len: 150000
    reenter_chan_len: 5000
    fork: 4
    tenants:
      spark:
        msg_key: log
        identifier: container_id
        ignore_regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2},\d{3} +\[
      spring:
        msg_key: log
        rules:
          - new_tag: cp.{env}
            regexp: ms:cp
          - new_tag: bot.{env}
            regexp: ms_\w+\ {0,}\|
          - new_tag: app.spring.{env}
            regexp: .*
  post_filters:
    reenter_chan_len: 5000
    out_chan_size: 10000
    fork: 4
    tenants:
      default:
        msg_key: log
        max_len: 307200
  kafka_recvs:
    interval_num: 1000
    interval_sec: 30
    tenants:
      spark:
        nconsumer: 10
        msg_key: log
        meta:
          container_id: "go-fluentd"
        groups:
          sit: paas_spark_log_sit_v2
          uat: paas_spark_log_uat_v2
          perf: paas_spark_log_perf_v2
          prod: paas_spark_log_prod_v2
        topics:
          sit: logaiSit
          uat: logaiUat
          perf: logaiPerf
          prod: logaiPro
        tags:
          sit: spark.sit
          uat: spark.uat
          perf: spark.perf
          prod: spark.prod
        brokers:
          sit:
            - xxx
          uat:
            - xxx
          perf:
            - xxx
          prod:
            - xxx
  dispatcher:
    out_chan_size: 10000
  tag_filters:
    internal_chan_size: 10000
    tenants:
      connector:
        tags:
          - connector
          - gateway
        msg_key: log
        # 2018-04-02 02:02:10.928 | sh-datamining | INFO | http-nio-8080-exec-80 | com.pateo.qingcloud.gateway.core.zuul.filters.post.LogFilter | 74 | {"key": "value"}: xxx
        # 2018-04-02 02:02:10.928 | sh-datamining | INFO | http-nio-8080-exec-80 | com.pateo.qingcloud.gateway.core.zuul.filters.post.LogFilter | 74 | xxx
        # 2018-03-12 02:02:10.928 | gateway | INFO | http-nio-8080-exec-80 | com.pateo.qingcloud.gateway.core.zuul.filters.post.LogFilter | 74: {"key": "value"}:xxx
        pattern: (?ms)^(?P<time>.{23}) {0,}\| {0,}(?P<app>[^ ]+) {0,}\| {0,}(?P<level>[^ ]+) {0,}\| {0,}(?P<thread>[^ ]+) {0,}\| {0,}(?P<class>[^ ]+) {0,}\| {0,}(?P<line>\d+) {0,}([\|:] {0,}(?P<args>\{.*\}))?([\|:] {0,}(?P<message>.*))?
        is_remove_orig_log: true
        parse_json_key: args
        must_include: app
      geely:
        tags:
          - geely
        msg_key: log
        # 2018-02-05 10:33:13.408 | geely:nlcc | INFO | http-bio-8081-exec-3 | com.tservice.cc.web.interceptor.MyLoggingOutInterceptor.handleMessage:57 - Outbound Message:{ID:1, Address:http://10.133.200.77:8082/gisnavi/tservice/gisnavi/poi/poicategory, Http-Method:GET, Content-Type:application/json, Headers:{Content-Type=[application/json], Accept=[application/json]}}
        pattern: (?ms)^(?P<time>.{23}) {0,}\| {0,}(?P<project>[^ ]+) {0,}\| {0,}(?P<level>[^ ]+) {0,}\| {0,}(?P<thread>[^\|]+) {0,}\| {0,}(?P<class>[^\:]+)\:(?P<line>\d+) {0,}- {0,}(?P<message>.+)
        is_remove_orig_log: true
        must_include: project
      spark:
        tags:
          - spark
        msg_key: log
        # 2018/03/06 15:19:23.619 INFO 6356e435e4894a22a41c80e6ade35526 com.pateo.qingcloud.ai.sparkstreaming.db.AiDbService: Enter getFuseDataType  function!
        pattern: "(?ms)^(?P<time>.{23}) {0,}(?P<level>[^ ]+) +(?P<uuid>[^ ]+) +(?P<app_info>[^:]+) {0,}: {0,}(?P<message>.*)"
        is_remove_orig_log: true
        must_include: app_info
      ptdeployer:
        tags:
          - ptdeployer
        msg_key: log
        # [2018-11-12 03:41:39,735 - ptdeployer - views.py - 1429 - INFO - app_log] - zihengni登录成功
        pattern: (?ms)^\[(?P<time>.{23}) {0,}- {0,}(?P<app>[^ ]+) {0,}- {0,}(?P<class>[^ ]+) {0,}- {0,}(?P<line>\d+) {0,}- {0,}(?P<level>[^ ]+) {0,}- {0,}(?P<thread>[^\|]+)\] {0,}- {0,}(?P<message>.*)
        is_remove_orig_log: true
        must_include: app
        add:  # optional
          ptdeployer:
            datasource: ptdeployer
      cp:
        tags:
          - cp
        msg_key: log
        # 2018-02-01 16:15:43.518 - ms:cp|type:platform|uuid:4f99962d-c272-43bb-85d9-20ab030180b7|dateTime:2018-02-01 16:15:43.518|customerSid:27|customerCode:DT00000000|customerName:默认
        pattern: (?ms)^(?P<time>.{23}) - (?P<message>ms:cp.*)
        is_remove_orig_log: true
        must_include: message
        add:  # optional
          cp:
            datasource: cp
      spring:
        tags:
          - app.spring
          - ai
          - tsp
          - base
          - bot
        msg_key: log
        # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
        pattern: (?ms)^(?P<time>.{23}) {0,}\| {0,}(?P<app>[^ ]+) {0,}\| {0,}(?P<level>[^ ]+) {0,}\| {0,}(?P<thread>[^ ]+) {0,}\| {0,}(?P<class>[^ ]+) {0,}\| {0,}(?P<line>\d+) {0,}([\|:] {0,}(?P<args>\{.*\}))?([\|:] {0,}(?P<message>.*))?
        is_remove_orig_log: true
        must_include: app
        add:  # optional
          ai:
            datasource: ai
          tsp:
            datasource: tsp
          base:
            datasource: base
          bot:
            datasource: bot
          app.spring:
            datasource: spring
      concator:
        config:
          max_length: 100000
        tenants:
          test:
            msg_key: log
            identifier: container_id
            regex: ^\d{4}-\d{2}-\d{2}

          spark:
            msg_key: log
            identifier: container_id
            regex: ^\d{4}\/\d{2}\/\d{2} \d{2}:\d{2}:\d{2}.\d{3} \w+
          cp:
            msg_key: log
            identifier: container_id
            # 2018-02-01 16:15:43.518 - ms:cp|type:platform|uuid:4f99962d-c272-43bb-85d9-20ab030180b7|dateTime:2018-02-01 16:15:43.518|customerSid:27|customerCode:DT00000000|customerName:默认
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} - ms:cp\|
          ramjet:
            msg_key: log
            identifier: container_id
            # [2018-08-03T05:42:42.714151Z - DEBUG - /go/src/github.com/Laisky/go-ramjet/tasks/logrotate/backup/main.go:129] IsFileReadyToUpload for 2018050700.log.gz
            regex: ^\[\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z - \w+ -
          app.spring:
            msg_key: log
            identifier: container_id
            # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          tsp:
            msg_key: log
            identifier: container_id
            # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          ai:
            msg_key: log
            identifier: container_id
            # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          base:
            msg_key: log
            identifier: container_id
            # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          bot:
            msg_key: log
            identifier: container_id
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          gateway:
            msg_key: log
            identifier: container_id
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          connector:
            msg_key: log
            identifier: container_id
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} {0,}\|
          geely:
            msg_key: log
            # 2018-02-05 10:33:13.408 | geely:nlcc | INFO | http-bio-8081-exec-3 | com.tservice.cc.web.interceptor.MyLoggingOutInterceptor.handleMessage:57 - Outbound Message:{ID:1, Address:http://10.133.200.77:8082/gisnavi/tservice/gisnavi/poi/poicategory, Http-Method:GET, Content-Type:application/json, Headers:{Content-Type=[application/json], Accept=[application/json]}}
            # 2018-04-15 10:59:31.096 | geely:vca | INFO  | I/O dispatcher 2 | MONITORLOG.writeMonitorLog:26 - 2018-04-15 10:59:31.096|VCA|XXX19YYYY10040463|vca00157f9c04ff887f2b3488ddc4f2b|VCA_TRIGGER_OUT'
            identifier: container_id
            regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} +\|
          ptdeployer:
            msg_key: log
            identifier: container_id
            regex: ^\[\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} +-
