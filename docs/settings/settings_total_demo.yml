consts:
  ports:
    "18083": rsyslog recv
    "22800": http
    "24225": fluentd recv
    "24226": forward recv
  kafka:
    1-1-1-1-9092: &1-1-1-1-9092
      - 1.1.1.1:9092
    2-2-2-2-9092: &2-2-2-2-9092
      - 2.2.2.2:9092
  tags:
    all-tags: &all-tags
      - test
      - app.spring
      - gateway
      - connector
      - qingai
      - cp
      - ptdeployer
      - httpguard
      - ramjet
      - tsp
      - ai
      - base
      - geely
      - bot
      - spark
      - emqtt
      - kafkabuf
      - wechat
      - forward-wechat
      - fluentd-forward
      - usertracking
      - bigdata-wuling
  envs:
    all-env: &all-env
      - sit
      - perf
      - uat
      - prod
settings:
  acceptor:
    async_out_chan_size: 100000
    sync_out_chan_size: 10000
    max_rotate_id: 4294967295  # do not change to smaller number
    recvs:
      plugins:
        # wechat_mini_program_forward:
        #   type: http
        #   active_env: *all-env
        #   msg_key: log
        #   max_body_byte: 1048576
        #   max_allowed_delay_sec: 300
        #   max_allowed_ahead_sec: 60
        #   orig_tag: wechat
        #   tag: forward-wechat
        #   ts_regexp: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$
        #   time_key: "@timestamp"
        #   time_format: "2006-01-02T15:04:05.000Z"
        #   signature_key: sig
        #   signature_salt: ri3j2ij3fjf23ofjsjfwifjpie02a
        #   tag_key: tag
        #   name: wechat-mini-program
        #   path: "/api/v1/log/wechat/:env"
        fluentd:
          type: fluentd
          active_env: *all-env
          tag_key: tag
          addr: 0.0.0.0:24225
          is_rewrite_tag_from_tag_key: false
          concat_max_len: 100000
          concat:
            test:
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2}

            spark:
              # 1999/22/22 22:22:22.222 jiejwfijef
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}\.\d{3} +[^ ]
            cp:
              # 2018-02-01 16:15:43.518 - ms:cp|type:platform|uuid:4f99962d-c272-43bb-85d9-20ab030180b7|dateTime:2018-02-01 16:15:43.518|customerSid:27|customerCode:DT00000000|customerName:默认
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} *- *ms:cp\|
            ramjet:
              # [2018-08-03T05:42:42.714151Z - DEBUG - /go/src/github.com/Laisky/go-ramjet/tasks/logrotate/backup/main.go:129] IsFileReadyToUpload for 2018050700.log.gz
              msg_key: log
              identifier: container_id
              head_regexp: ^\[\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z *-
            app.spring:
              # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
            tsp:
              # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
            ai:
              # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
            base:
              # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
            bot:
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
            gateway:
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
            connector:
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
            qingai:
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
            geely:
              # 2018-02-05 10:33:13.408 | geely:nlcc | INFO | http-bio-8081-exec-3 | com.tservice.cc.web.interceptor.MyLoggingOutInterceptor.handleMessage:57 - Outbound Message:{ID:1, Address:http://10.133.200.77:8082/gisnavi/tservice/gisnavi/poi/poicategory, Http-Method:GET, Content-Type:application/json, Headers:{Content-Type=[application/json], Accept=[application/json]}}
              # 2018-04-15 10:59:31.096 | geely:vca | INFO  | I/O dispatcher 2 | MONITORLOG.writeMonitorLog:26 - 2018-04-15 10:59:31.096|VCA|XXX19YYYY10040463|vca00157f9c04ff887f2b3488ddc4f2b|VCA_TRIGGER_OUT'
              msg_key: log
              identifier: container_id
              head_regexp: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} +\|
            ptdeployer:
              msg_key: log
              identifier: container_id
              head_regexp: ^\[\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} +-
        fluentd-forward:
          type: fluentd
          active_env: *all-env
          tag_key: tag
          addr: 0.0.0.0:24226
          is_rewrite_tag_from_tag_key: true
        rsyslog:
          type: rsyslog
          active_env: *all-env
          tag_key: tag
          addr: 0.0.0.0:24514
          time_key: timestamp
          msg_key: content
          new_time_key: "@timestamp"
          new_time_format: "2006-01-02T15:04:05.000Z"
        spark:
          type: kafka
          active_env: *all-env
          interval_num: 5000
          interval_sec: 3
          nconsumer: 6
          msg_key: log
          tag_key: tag
          is_json_format: false
          meta:
            container_id: "go-fluentd"
          groups:
            sit: paas_spark_log_sit_v2
            uat: paas_spark_log_uat_v2
            perf: paas_spark_log_perf_v2
            prod: paas_spark_log_prod_v2
          topics:
            sit: logaiSit
            uat: logaiUat
            perf: logaiPerf
            prod: logaiPro
          tags:
            sit: spark.sit
            uat: spark.uat
            perf: spark.perf
            prod: spark.prod
          brokers:
            sit: *1-1-1-1-9092
            uat: *1-1-1-1-9092
            perf: *1-1-1-1-9092
            prod: *2-2-2-2-9092
        usertracking:
          type: kafka
          active_env:
            - perf
            - uat
            - prod
          interval_num: 5000
          interval_sec: 3
          nconsumer: 6
          msg_key: log
          tag_key: tag
          is_json_format: false
          meta:
            container_id: "go-fluentd"
          groups:
            perf: paas_spark_log_perf_v2
            uat: paas_spark_log_uat_v2
            prod: paas_spark_log_prod_v2
          topics:
            perf: UserTracking_perf
            uat: UserTracking
            prod: UserTracking
          tags:
            sit: usertracking.sit
            uat: usertracking.uat
            perf: usertracking.perf
            prod: usertracking.prod
          brokers:
            sit: *1-1-1-1-9092
            uat: *1-1-1-1-9092
            perf: *1-1-1-1-9092
            prod: *2-2-2-2-9092
        # kafkabuf:
        #   type: kafka
        #   active_env: *all-env
        #   interval_num: 5000
        #   interval_sec: 3
        #   nconsumer: 6
        #   msg_key: log
        #   is_json_format: true
        #   json_tag_key: tag
        #   tag_key: tag
        #   # rewrite_tag: kafkabuf
        #   groups:
        #     sit: paas_log_platform_sit
        #     perf: paas_log_platform_perf
        #     uat: paas_log_platform_uat
        #     prod: paas_log_platform_prod
        #   topics:
        #     sit: logbuf_sit
        #     uat: logbuf_uat
        #     perf: logbuf_perf
        #     prod: logbuf_prod
        #   brokers:
        #     sit: *2-2-2-2-9092
        #     uat: *2-2-2-2-9092
        #     perf: *2-2-2-2-9092
        #     prod: *2-2-2-2-9092
  producer:
    discard_chan_size: 50000
    sender_inchan_size: 50000
    forks: 3
    # senders
    # support types: fluentd/kafka/es
    plugins:
      localtest:
        active_env: *all-env
        tags: *all-tags
        type: "null"
        forks: 5
        log_level: info
        is_commit: true
        is_discard_when_blocked: false
      # es_general:
      #   type: es
      #   active_env: *all-env
      #   tags:
      #     # - es-general
      #     # - test
      #     - app.spring
      #     - gateway
      #     - connector
      #     - qingai
      #     - cp
      #     - ptdeployer
      #     - fluentd-forward
      #     - httpguard
      #     - ramjet
      #     - tsp
      #     - ai
      #     - base
      #     - bot
      #     - spark
      #     - emqtt
      #     # - kafkabuf
      #     - wechat
      #     - usertracking
      #     - bigdata-wuling
      #   forks: 3
      #   addr: http://es/_bulk
      #   msg_batch_size: 1000
      #   max_wait_sec: 3
      #   tag_key: tag
      #   retry_chan_len: 10000
      #   indices:
      #     ramjet.{env}: "{env}-spring-logs-write"
      #     httpguard.{env}: "{env}-spring-logs-write"
      #     fluentd-forward.{env}: "{env}-spring-logs-write"
      #     app.spring.{env}: "{env}-spring-logs-write"
      #     gateway.{env}: "{env}-gateway-logs-write"
      #     connector.{env}: "{env}-connector-logs-write"
      #     qingai.{env}: "{env}-qingai-logs-write"
      #     cp.{env}: "{env}-cp-logs-write"
      #     ptdeployer.{env}: "{env}-spring-logs-write"
      #     tsp.{env}: "{env}-spring-logs-write"
      #     ai.{env}: "{env}-spring-logs-write"
      #     base.{env}: "{env}-spring-logs-write"
      #     bot.{env}: "{env}-spring-logs-write"
      #     spark.{env}: "{env}-spark-logs-write"
      #     emqtt.{env}: "{env}-emqtt-logs-write"
      #     wechat.{env}: "{env}-wechat-logs-write"
      #     usertracking.{env}: "{env}-usertracking-logs-write"
      #     bigdata-wuling.{env}: "{env}-bigdata_wuling-logs-write"
      #   is_discard_when_blocked: false
      # es_geely_v2:
      #   type: es
      #   active_env: *all-env
      #   tags:
      #     # - es-geely
      #     - geely
      #   forks: 10
      #   addr: http://es/_bulk
      #   msg_batch_size: 1000
      #   max_wait_sec: 3
      #   tag_key: tag
      #   retry_chan_len: 10000
      #   indices:
      #     geely.{env}: "{env}-geely-logs-write"
      #   is_discard_when_blocked: false
      # kafkabuf:
      #   type: es
      #   active_env: *all-env
      #   tag_key: tag
      #   brokers:
      #     - 172.16.4.63:9092
      #     - 172.16.4.64:9092
      #     - 172.16.4.65:9092
      #   topic:
      #     sit: logbuf_sit
      #     perf: logbuf_perf
      #     uat: logbuf_uat
      #     prod: logbuf_prod
      #   tags:  # all-tags exclude `kafkabuf`
      #     - test
      #     - app.spring
      #     - gateway
      #     - connector
      #     - cp
      #     - ptdeployer
      #     - tsp
      #     - ai
      #     - base
      #     - geely
      #     - bot
      #     - spark
      #     - emqtt
      #   forks: 3
      #   msg_batch_size: 10000
      #   max_wait_sec: 5
      #   retry_chan_len: 100000
      #   is_discard_when_blocked: false
      # kafka_cp:
      #   type: kafka
      #   active_env: *all-env
      #   tag_key: tag
      #   brokers:
      #   sit: *1-1-1-1-9092
      #   perf: *1-1-1-1-9092
      #   uat: *1-1-1-1-9092
      #   prod: *2-2-2-2-9092
      #   topic: docker_message
      #   tags:
      #     - cp
      #   forks: 3
      #   msg_batch_size: 10000
      #   max_wait_sec: 5
      #   retry_chan_len: 100000
      #   is_discard_when_blocked: false
      # fluentd_backup_geely:
      #   type: fluentd
      #   active_env:
      #     - prod
      #   tags:
      #     - geely.prod
      #   forks: 3
      #   addr: fluentd-sit.ptcloud.t.home:24235
      #   msg_batch_size: 10000
      #   max_wait_sec: 5
      #   retry_chan_len: 50000
      #   is_discard_when_blocked: true
      # fluentd_backup_emqtt:
      #   type: fluentd
      #   active_env:
      #     - prod
      #   tags:
      #     - emqtt.prod
      #   forks: 3
      #   addr: fluentd-sit.ptcloud.t.home:24236
      #   msg_batch_size: 10000
      #   max_wait_sec: 5
      #   retry_chan_len: 50000
      #   is_discard_when_blocked: true
  journal:
    buf_dir_path: /Users/laisky/Downloads/buf
    buf_file_bytes: 209315200  # 200 MB
    journal_out_chan_len: 100000
    commit_id_chan_len: 500000
    is_compress: false
  acceptor_filters:
    out_buf_len: 150000
    reenter_chan_len: 5000
    fork: 4
    is_throttle: false
    throttle_max: 10000
    throttle_per_sec: 5000
    plugins:
      spark:
        type: spark
        msg_key: log
        identifier: container_id
        ignore_regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2},\d{3} +\[
      spring:
        type: spring
        msg_key: log
        tag_key: tag
        rules:
          - new_tag: cp.{env}
            regexp: "- ms:cp"
          - new_tag: bot.{env}
            regexp: ms_\w+
          - new_tag: app.spring.{env}
            regexp: .*
  post_filters:
    reenter_chan_len: 10000
    out_chan_size: 50000
    fork: 4
    plugins:
      default:
        msg_key: log
        max_len: 307200
      forward_tag_rewriter:
        type: tag-rewriter
        tag_key: tag
        tag: forward-wechat
      # 大数据的设备上报位置信息，需要时字段过滤和拼接
      bigdata_fields:
        type: fields
        tags:
          - bigdata-wuling
        include_fields:
          - vin
          - ngtpCreateTime
          - lon
          - lat
          - rowkey
          - location
          # - message
        # exclude_fields:
        #   - container_id
        new_fields:
          # rowkey: "${vin}_${ngtpCreateTime}"
          location: "${lat},${lon}"
      bigdata_custom:
        type: custom-bigdata
        tags:
          - bigdata-wuling
      es_dispatcher:
        type: es-dispatcher
        tags:
          - kafkabuf
        tag_key: tag
        rewrite_tag_map:
          # es-general
          app.spring.{env}: es-general.{env}
          gateway.{env}: es-general.{env}
          connector.{env}: es-general.{env}
          qingai.{env}: es-general.{env}
          cp.{env}: es-general.{env}
          ptdeployer.{env}: es-general.{env}
          tsp.{env}: es-general.{env}
          ai.{env}: es-general.{env}
          base.{env}: es-general.{env}
          bot.{env}: es-general.{env}
          spark.{env}: es-general.{env}
          emqtt.{env}: es-general.{env}
          bigdata-wuling.{env}: es-general.{env}
          # es-geely
          geely.{env}: es-geely.{env}
  dispatcher:
    nfork: 2
    out_chan_size: 10000
  tag_filters:
    internal_chan_size: 10000
    plugins:
      go-apps:
        type: parser
        lb_key: container_id
        nfork: 1
        tags:
          - fluentd-forward
          - httpguard
          - ramjet
        parse_json_key: log
        # ⬇⬇ time
        time_key: ts
        time_format: "2006-01-02T15:04:05.000-0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        # ⬇⬇ fields
        add:  # optional
          fluentd-forward:
            datasource: fluentd-forward
          httpguard:
            datasource: httpguard
          ramjet:
            datasource: ramjet
      qingai:
        type: parser
        lb_key: container_id
        nfork: 3
        tags:
          - qingai
        msg_key: log
        # 2019-07-06 13:34:48.313|http-nio-8010-exec-9|INFO|bot-parking|com.pateo.parking.service.impl.ParkingListServiceImpl|108:{"deviceId":"12345","input":"附近的停车场","intentName":"检索停车场","recordId":"bf728b47b8fe47c7a9f35b1eb1c347ae","shouldEndSession":"false","text":"找到这些你需要的停车场要去哪一个","userId":"12345","version":"1.0"}
        pattern: (?ms)^(?P<time>.{23}) *\| *(?P<app>[^|]+) *\| *(?P<level>[^|]+) *\| *(?P<thread>[^|]+) *\| *(?P<class>[^|]+) *\| *(?P<line>\d+) *[|:] *(?P<args>\{.*\})
        is_remove_orig_log: true
        parse_json_key: args
        must_include: app
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone:
          sit: "+0800"
          perf: "+0800"
          uat: "+0800"
          prod: "+0800"
      connector:
        type: parser
        lb_key: container_id
        nfork: 3
        tags:
          - connector
          - gateway
        msg_key: log
        # 2018-04-02 02:02:10.928 | sh-datamining | INFO | http-nio-8080-exec-80 | com.pateo.qingcloud.gateway.core.zuul.filters.post.LogFilter | 74 | {"key": "value"}: xxx
        # 2018-04-02 02:02:10.928 | sh-datamining | INFO | http-nio-8080-exec-80 | com.pateo.qingcloud.gateway.core.zuul.filters.post.LogFilter | 74 | xxx
        # 2018-03-12 02:02:10.928 | gateway | INFO | http-nio-8080-exec-80 | com.pateo.qingcloud.gateway.core.zuul.filters.post.LogFilter | 74: {"key": "value"}:xxx
        # 2019-02-18 15:42:06.635 | usertracking | DEBUG | kafka-producer-network-thread | producer-1 | com.pateo.qingcloud.base.usertracking.service.KafkaServiceBase$ProducerCallBack | 63: onCompletion when sendMessage to topic:UserTracking,partition:0  success!!
        pattern: (?ms)^(?P<time>.{23}) *\| *(?P<app>[^|]+) *\| *(?P<level>[^|]+) *\| *(?P<thread>[^|]+) *\| *(?:(?P<producer>[\w\-]+) *\| *)?(?P<class>[^|]+) *\| *(?P<line>\d+) *(?:[|:] *(?P<args>\{.*\}))? *(?:[|:] *(?P<message>.*))?
        is_remove_orig_log: true
        parse_json_key: args
        must_include: app
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone:
          sit: "+0800"
          perf: "+0800"
          uat: "+0800"
          prod: "+0800"
      geely:
        type: parser
        lb_key: container_id
        nfork: 3
        tags:
          - geely
        msg_key: log
        # 2018-02-05 10:33:13.408 | geely:nlcc | INFO | http-bio-8081-exec-3 | com.tservice.cc.web.interceptor.MyLoggingOutInterceptor.handleMessage:57 - Outbound Message:{ID:1, Address:http://10.133.200.77:8082/gisnavi/tservice/gisnavi/poi/poicategory, Http-Method:GET, Content-Type:application/json, Headers:{Content-Type=[application/json], Accept=[application/json]}}
        pattern: '(?ms)^(?P<time>.{23}) *\| *(?P<project>[^|]+) *\| *(?P<level>[^|]+) *\| *(?P<thread>[^|]+) *\| *(?P<class>[^:]+) *: *(?P<line>\d+) *- *(?P<message>.+)'
        is_remove_orig_log: true
        must_include: project
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone:
          sit: "+0800"
          perf: "+0800"
          uat: "+0800"
          prod: "+0800"
      bigdata-wuling:
        type: parser
        lb_key: container_id
        nfork: 3
        tags:
          - bigdata-wuling
        # ⬇⬇ time
        time_key: ngtpCreateTime
        time_format: "2006-01-02 15:04:05 -0700"
        new_time_format: "2006-01-02T15:04:05.000Z"
        reserved_time_key: true
        new_time_key: "@timestamp"
        append_time_zone:
          sit: "+0800"
          perf: "+0800"
          uat: "+0800"
          prod: "+0800"
      emqtt:
        type: parser
        lb_key: container_id
        nfork: 1
        tags:
          - emqtt
        add:
          emqtt:
            datasource: emqtt
      spark:
        type: parser
        lb_key: container_id
        nfork: 1
        tags:
          - spark
        msg_key: log
        # 2018/03/06 15:19:23.619 INFO 6356e435e4894a22a41c80e6ade35526 com.pateo.qingcloud.ai.sparkstreaming.db.AiDbService: Enter getFuseDataType  function!
        pattern: '(?ms)^(?P<time>.{23}) *(?P<level>[^ ]+) +(?P<uuid>[^ ]+) +(?P<app_info>[^:]+) *: *(?P<message>.*)'
        is_remove_orig_log: true
        must_include: app_info
        # ⬇⬇ time
        time_key: time
        time_format: "2006/01/02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone:
          sit: "+0800"
          perf: "+0000"
          uat: "+0000"
          prod: "+0800"
      usertracking:
        type: parser
        lb_key: container_id
        nfork: 1
        parse_json_key: log
        tags:
          - usertracking
        msg_key: log
        pattern: (?ms).*happentime\\":\\"(?P<time>[\d\- :]+).*
        is_remove_orig_log: false
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone:
          sit: "+0800"
          perf: "+0800"
          uat: "+0800"
          prod: "+0800"
      ptdeployer:
        type: parser
        lb_key: container_id
        nfork: 1
        tags:
          - ptdeployer
        msg_key: log
        # [2019-08-01 08:20:46,082 - DEBUG - /Users/laisky/repo/pateo/ptdeployer/deployer/handlers.py:16 - app_log] - get_deployer with env sit
        pattern: (?ms)^\[(?P<time>.{23}) *- *(?P<level>[^\-]+) *- *(?P<class>[^\-]+):(?P<line>\d+) *- *(?P<app>[^|]+)\] *- *(?P<message>.*)
        is_remove_orig_log: true
        must_include: app
        add:  # optional
          ptdeployer:
            datasource: ptdeployer
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone:
          sit: "+0000"
          perf: "+0000"
          uat: "+0000"
          prod: "+0000"
      cp:
        type: parser
        lb_key: container_id
        nfork: 1
        tags:
          - cp
        msg_key: log
        # 2018-02-01 16:15:43.518 - ms:cp|type:platform|uuid:4f99962d-c272-43bb-85d9-20ab030180b7|dateTime:2018-02-01 16:15:43.518|customerSid:27|customerCode:DT00000000|customerName:默认
        pattern: '(?ms)^(?P<time>.{23}) *- *(?P<message>ms:cp.*)'
        is_remove_orig_log: true
        must_include: message
        add:  # optional
          cp:
            datasource: cp
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone:
          sit: "+0800"
          perf: "+0800"
          uat: "+0800"
          prod: "+0800"
      spring:
        type: parser
        lb_key: container_id
        nfork: 3
        tags:
          - app.spring
          - ai
          - tsp
          - base
          - bot
        msg_key: log
        # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
        # 2019-04-23 17:02:09.733 | mswallet| DEBUG | http-nio-8080-exec-2 | org.apache.ibatis.logging.jdbc.BaseJdbcLogger | 145 | {c83dd4a0244146fe9ada4dfcc8a737b4}| ==> Parameters: 123(Long)
        pattern: '(?ms)^(?P<time>.{23}) *\| *(?P<app>[^|]+) *\| *(?P<level>[^|]+) *\| *(?P<thread>[^|]+) *\| *(?P<class>[^|]+) *\| *(?P<line>\d+) *(?:[|:] *(?P<args>\{[^\}]+\}))?(?: *[|:] *(?P<message>.*))?'
        is_remove_orig_log: true
        must_include: app
        # ⬇⬇ time
        time_key: time
        time_format: "2006-01-02 15:04:05.000 -0700"
        new_time_format: "2006-01-02T15:04:05.000000Z"
        reserved_time_key: false
        new_time_key: "@timestamp"
        append_time_zone:
          sit: "+0800"
          perf: "+0800"
          uat: "+0800"
          prod: "+0800"
        # ⬇⬇ fields
        add:  # optional
          ai:
            datasource: ai
          tsp:
            datasource: tsp
          base:
            datasource: base
          bot:
            datasource: bot
          app.spring:
            datasource: spring
      # concator:
      #   type: concator
      #   config:
      #     max_length: 100000
      #     lb_key: container_id
      #     nfork: 3
      #   plugins:
      #     test:
      #       msg_key: log
      #       identifier: container_id
      #       regex: ^\d{4}-\d{2}-\d{2}

      #     spark:
      #       msg_key: log
      #       identifier: container_id
      #       # 1999/22/22 22:22:22.222 jiejwfijef
      #       regex: ^\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}\.\d{3} +[^ ]
      #     cp:
      #       msg_key: log
      #       identifier: container_id
      #       # 2018-02-01 16:15:43.518 - ms:cp|type:platform|uuid:4f99962d-c272-43bb-85d9-20ab030180b7|dateTime:2018-02-01 16:15:43.518|customerSid:27|customerCode:DT00000000|customerName:默认
      #       regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} *- *ms:cp\|
      #     ramjet:
      #       msg_key: log
      #       identifier: container_id
      #       # [2018-08-03T05:42:42.714151Z - DEBUG - /go/src/github.com/Laisky/go-ramjet/tasks/logrotate/backup/main.go:129] IsFileReadyToUpload for 2018050700.log.gz
      #       regex: ^\[\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z *-
      #     app.spring:
      #       msg_key: log
      #       identifier: container_id
      #       # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
      #       regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
      #     tsp:
      #       msg_key: log
      #       identifier: container_id
      #       # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
      #       regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
      #     ai:
      #       msg_key: log
      #       identifier: container_id
      #       # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
      #       regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
      #     base:
      #       msg_key: log
      #       identifier: container_id
      #       # 2018-03-06 16:56:22.514 | mscparea | INFO  | http-nio-8080-exec-1 | com.pateo.qingcloud.cp.core.service.impl.CPBusiness.reflectAdapterRequest | 84: test
      #       regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
      #     bot:
      #       msg_key: log
      #       identifier: container_id
      #       regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
      #     gateway:
      #       msg_key: log
      #       identifier: container_id
      #       regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
      #     connector:
      #       msg_key: log
      #       identifier: container_id
      #       regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
      #     qingai:
      #       msg_key: log
      #       identifier: container_id
      #       regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}\.\d{3} *\|
      #     geely:
      #       msg_key: log
      #       # 2018-02-05 10:33:13.408 | geely:nlcc | INFO | http-bio-8081-exec-3 | com.tservice.cc.web.interceptor.MyLoggingOutInterceptor.handleMessage:57 - Outbound Message:{ID:1, Address:http://10.133.200.77:8082/gisnavi/tservice/gisnavi/poi/poicategory, Http-Method:GET, Content-Type:application/json, Headers:{Content-Type=[application/json], Accept=[application/json]}}
      #       # 2018-04-15 10:59:31.096 | geely:vca | INFO  | I/O dispatcher 2 | MONITORLOG.writeMonitorLog:26 - 2018-04-15 10:59:31.096|VCA|XXX19YYYY10040463|vca00157f9c04ff887f2b3488ddc4f2b|VCA_TRIGGER_OUT'
      #       identifier: container_id
      #       regex: ^\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} +\|
      #     ptdeployer:
      #       msg_key: log
      #       identifier: container_id
      #       regex: ^\[\d{4}-\d{2}-\d{2} +\d{2}:\d{2}:\d{2}.\d{3} +-
